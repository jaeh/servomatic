{"version":3,"sources":["../../src/lib/logger.js"],"names":[],"mappings":";;;;;;;;;;IACO,MAAM,2BAAM,QAAQ;;IACnB,IAAI,WAAO,MAAM,EAAjB,IAAI;;kBAC2C,IAAI;;IAA9B,OAAO,OAA5B,iBAAiB;IAAa,UAAU,OAAV,UAAU;;IACzC,KAAK,2BAAM,aAAa;;IACvB,IAAI,WAAO,aAAa,EAAxB,IAAI;;IACL,MAAM,2BAAM,QAAQ;;AAE3B,IAAI,IAAI,CAAC;;IAEH,MAAM;AACC,WADP,MAAM,CACE,GAAG,EAAa;QAAX,IAAI,gCAAG,EAAE;;0BADtB,MAAM;;AAER,QAAI,GAAG,GAAW,OAAO,CAAC,GAAG,EAAE;QAC3B,UAAU,GAAI,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC,CAClD;;AAED,QAAI,GAAO,IAAI,CAAC;AAChB,QAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;;AAEvC,QAAK,CAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG;AAC5B,aAAO,CAAC,GAAG,iBAAe,IAAI,CAAC,GAAG,kCAA6B,UAAU,CAAG,CAAC;AAC7E,UAAI,CAAC,GAAG,GAAG,UAAU,CAAC;AACtB,YAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAE,CAAC;KAChC;;AAED,QAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE;AACpB,YAAM,EAAE;AACN,cAAM,EAAE,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,EAAC,KAAK,EAAE,GAAG,EAAC,CAAE;AAC7D,YAAI,EAAE,cAAU,GAAG,EAAE,GAAG,EAAE;AAAE,iBAAO,GAAG,CAAC,UAAU,IAAI,GAAG,CAAA;SAAE;OAC7D;AACC,SAAG,EAAK;AACN,cAAM,EAAE,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,EAAE,EAAC,KAAK,EAAE,GAAG,EAAC,CAAE;AAC5D,YAAI,EAAE,cAAU,GAAG,EAAE,GAAG,EAAE;AAAE,iBAAO,GAAG,CAAC,UAAU,GAAG,GAAG,CAAA;SAAE;OAC5D;KACF,CAAC,CAAC;;AAEH,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;GAChB;;eA3BG,MAAM;AA6BV,cAAU;aAAA,sBAAG;AACX,YAAI,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,GAAG,EAAK;AACvB,cAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAE,CAAA;SACxC,CAAC,CAAC;OACJ;;;;SAjCG,MAAM;;;iBAoCG,MAAM","file":"src/lib/logger.js","sourcesContent":["//logging middleware\nimport morgan from 'morgan';\nimport {join} from 'path';\nimport {createWriteStream as wStream, existsSync} from 'fs';\nimport merge from 'magic-merge';\nimport {each} from 'magic-loops';\nimport mkdirp from 'mkdirp';\n\nvar self;\n\nclass Logger {\n  constructor(app, opts = {}) {\n    var cwd         = process.cwd()\n      , defaultDir  = join('/var', 'log', 'servomatic')\n    ;\n\n    self     = this;\n    self.dir = opts.dir || join(cwd, 'log')\n\n    if ( ! existsSync(self.dir) ) {\n      console.log(`log dir at ${self.dir} does not exist, creating ${defaultDir}`);\n      self.dir = defaultDir;\n      mkdirp(self.dir, {mode: 644} );\n    }\n\n    self.logs = merge(opts, {\n        access: {\n          stream: wStream( join(self.dir, 'access.log'), {flags: 'a'} )\n        , skip: function (req, res) { return res.statusCode >= 400 }\n      }\n      , err   : {\n          stream: wStream( join(self.dir, 'error.log'), {flags: 'a'} )\n        , skip: function (req, res) { return res.statusCode < 400 }\n      }\n    });\n\n    self.app = app;\n  }\n\n  middleware() {\n    each(self.logs, (log) => {\n      self.app.use( morgan('combined', log) )\n    });\n  }\n}\n\nexport default Logger;\n"]}