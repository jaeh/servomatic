{"version":3,"sources":["../src/servomatic.js"],"names":[],"mappings":"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","file":"src/servomatic.js","sourcesContent":["#!/usr/bin/node\n\nimport express from 'express';\nimport {get} from 'http';\nimport {join} from 'path';\nimport Favicon from 'magic-favicon';\nimport {existsSync} from 'fs';\nimport api from './lib/api';\nimport errorHandler from './lib/errorHandler';\nimport killer from './lib/killer';\nimport view from './lib/view';\nimport Logger from './lib/logger';\nimport minimist from 'minimist';\n\nvar servomatic = express()\n  , env   = servomatic.get('env')\n  , cwd   = process.cwd()\n  , argv  = minimist( process.argv.slice(2) )\n;\n\nif ( argv.dir && typeof argv.dir === 'string' ) {\n  if ( argv.dir.indexOf('/') === 0 ) {\n    cwd = argv.dir;\n  } else {\n    cwd = join( cwd, argv.dir );\n  }\n}\n\nvar dirs = {\n      static   : join(cwd)\n    , public   : join(cwd, 'public')\n    , views    : join(cwd, 'views')\n    , favicon  : join(cwd, 'favicon.ico')\n    , worstCase: join(__dirname, 'static')\n  }\n  , logger = new Logger( servomatic )\n;\n\nconsole.log(`executing in cwd: ${cwd}`);\n\nservomatic.set('port', process.env.PORT || 80);\n\n// view engine setup for the rare cases where no html file exists\nservomatic.set('views', dirs.views);\nservomatic.set('view engine', 'jade');\n\nnew Favicon(servomatic, dirs.favicon);\n\n//if requested path exists in /public it gets served from there\nservomatic.use( express.static(dirs.public) );\n\nlogger.middleware(servomatic);\n\n//servomaticomatic api redirect\nservomatic.use('/slackomatic/*', api);\n\nservomatic.use(killer);\n\nservomatic.use( express.static( dirs.static, {\n  extensions: ['html'] //automatically add html extension to urls\n, index: ['index.html'] //always load index.html files on /\n}));\n\n//renders :page from views/pages if static html does not exist\nservomatic.use('/:page', view);\n\nservomatic.use( express.static(dirs.worstCase) );\n\n// catch 404 and forwarding to error handler\nservomatic.use( (req, res, next) => {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n// development error handler prints stacktrace\nif ( ! errorHandler.hasOwnProperty(env) ) {\n  env = 'production';\n}\n\nservomatic.use( errorHandler[env] );\n\nservomatic.listen( servomatic.get('port'), () => {\n  console.log(`servomatic listens on port : ${servomatic.get('port')}`);\n} );\n"]}